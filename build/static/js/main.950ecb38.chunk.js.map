{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","Notification","message","Footer","style","color","fontStyle","fontSize","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.950ecb38.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important\r\n        ? 'make not important' : 'make important'\r\n    return (\r\n        <li className='note'>\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  const nonExisting = {\r\n      id: 10000,\r\n      content: 'This note is NOT saved to the server',\r\n      date: '2019-05-30T17:30:31.098Z',\r\n      important: true\r\n  }\r\n\r\n  return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note, important: !note.important}\n    \n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  useEffect(() => {\n    noteService\n    .getAll()\n    .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n    \n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n\n    \n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  const Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>Note app, made by Mark Stouffer, Northeastern University 2021</em>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n          <Note \n            key={note.id} \n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)} \n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n          value={newNote} \n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n  "],"sourceRoot":""}